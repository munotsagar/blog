JefferyWay

Laravel Migration
•	Create new table :
1.	Php artisan make:migration create_article_table --create="articles"
2.	Php artisan migrate(make changes)
3.	composer require doctrine/dbal
4.	php artisan make:migration add_excerpt_to_articles --table="articles"
5.	Php artisan migrat:rollback
6.  php artisan make:model Article
	composer depends nikic/php-parser
7.  php artisan tinker
8.  $articles = APP\Article::where('body', 'some text')->get();
9.  $article = new APP\Article;
	$article->title = "Article Title";
	$article->body = "Article Body";
	$article->save();
	
10. $article = APP\Article::create(['title' => 'New Article', 'body' => 'New Body', 'published_at' => Carbon\Carbon::now()]);	

11. $articles = APP\Article::find(2); 

12. $articles->toArray();

13 $articles->update(['title' => 'New updated title', 'body' => 'New updated Body']);

14 APP\Article::all()->toArray();

15 $articles = APP\Article::findOrFail(2); 

16 abort(404) to show error page

17 <a href="/articles/{{$article->id}}"> {{$article->title}}</a>

18 <a href="{{action('ArticlesController@show', [$article->id])}}"> {{$article->title}}</a>

19 <a href="{{url('/articles/', $article->id)}}"> {{$article->title}}</a>

20 composer require illuminate/html

	in view file need to add :
	
	{!! Form::open() !!}
	
	 <div class="form-group">
    {!! Form::label('title', 'Name:') !!}
    {!! Form::text('title', null, ['class' => 'form-control']) !!}
    </div>
    
	{!! Form::close() !!}
	
	E:\php\htdocs\blog\vendor\illuminate\html\HtmlServiceProvider.php
	
	in this file need to change :
	
	$this->app->bindShared('html', function($app) to $this->app->bindShared('html', function($app)
	
	and $this->app->bindShared('form', function($app) to $this->app->singleton('form', function($app)
	
	

21 dd('Sagar'); to show message

22 $article = new Article;
	
	$article->title = "New Title";
	
	$input = Request::all();
	
	$article->title = $input['title'];
	
	$article->save();
	
	OR
	
	Article::create($input);
	
23 Form Validation for Create Article Form

	php artisan make:request ArticleRequest
	
	public function rules()
    {
        return [
            'title' => 'required|min:3',
            'body'  =>  'required',
            'published_at'  =>  'required|date'
        ];
    }
	
24 add type hunting in controller class in method where actual data stored

		public function store(CreateArticleRequest $request){
		
		Article::create($request->all());
        return redirect('articles');
		}
		
24 In view add below code to show error message
	
		 @if ($errors->any())
        <ul class="alert alert-danger">
            @foreach($errors->all() as $error)
                <li>{{$error}}</li>
            @endforeach
        </ul>
    @endif
	
	
25 php artisan route:list (List of all the routes in application)

26 Route::resource('articles', 'ArticlesController'); 

	With this line laravel understand and create all the dependent route for article module automatically.
	add above line on route.php file and then fire below command also comment all other route for article
	
	$  php artisan route:list
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+
| Domain | Method    | URI                      | Name             | Action                                          | Middleware |
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+
|        | GET|HEAD  | /                        |                  | Closure                                         | web        |
|        | GET|HEAD  | about                    |                  | App\Http\Controllers\WelcomeController@about    | web        |
|        | POST      | articles                 | articles.store   | App\Http\Controllers\ArticlesController@store   | web        |
|        | GET|HEAD  | articles                 | articles.index   | App\Http\Controllers\ArticlesController@index   | web        |
|        | GET|HEAD  | articles/create          | articles.create  | App\Http\Controllers\ArticlesController@create  | web        |
|        | DELETE    | articles/{articles}      | articles.destroy | App\Http\Controllers\ArticlesController@destroy | web        |
|        | PUT|PATCH | articles/{articles}      | articles.update  | App\Http\Controllers\ArticlesController@update  | web        |
|        | GET|HEAD  | articles/{articles}      | articles.show    | App\Http\Controllers\ArticlesController@show    | web        |
|        | GET|HEAD  | articles/{articles}/edit | articles.edit    | App\Http\Controllers\ArticlesController@edit    | web        |
|        | GET|HEAD  | contact                  |                  | App\Http\Controllers\WelcomeController@contact  | web        |
|        | GET|HEAD  | foo                      |                  | Closure                                         | web        |
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+

27 php artisan migrate --path=Illuminate\Database\Migrations

Note: If you receive a "class not found" error when running migrations, try running the  command : composer dump-autoload

php artisan cache:clear
composer clearcache
composer dumpautoload 

If you deleted the file you should delete the matching row from the migrations table in your DB. Don't delete a migration without doing migrate:reset first.

$user = new App\User;

>>> $user->username = 'sagar';

>>> $user->email = 'munot.sagar@gmail.com';


>>> $user->password = bcrypt('sagarmunot');
=> "←[32m$2y$10$cUaxQ7ApeSlYhdAlJR5ZA.YU8EE/eT2A07ZzIaEkhwtzxqwTjS5k2←[39m"
>>> $user->save();


$user->articles()->get()->toArray(); OR $user->articles()->toArray();

php artisan make:auth

-------------------------------------------------------------------------------------------------------------------
Create REST base API in Laravel

1	composer create-project restAPP --prefer-dist

php artisan make:middleware simpleAuthMiddleware



https://www.codetutorial.io/laravel-5-rest-api-basic-authentication/

https://www.codetutorial.io/laravel-and-angularjs-token-based-auth-part1/

https://laravel.com/docs/master/authentication#included-views

https://laracasts.com/series/incremental-api-development/episodes/1

Rest api example :

http://www.tutorials.kode-blog.com/laravel-5-angularjs-tutorial

------------------------------------- Remove packages from laravel -------------------------------

The steps to remove a package from Laravel are:
Remove declaration from composer.json (in "require" section)
Remove Service Provider from "app/config/app.php" (reference in "providers" array)
Remove any Class Aliases from "app/config/app.php"
Remove any references to the package from your code :-)
Run "composer update"

----------------------------------------------------------------------------------------------------

-------------------------------- XAPI ---------------------------------------------------------------

https://packagist.org/search/?tags=can

-----------------------------------------------------------------------------------------------------

Install https://nodejs.org/en/ nodejs from this link

command : npm install