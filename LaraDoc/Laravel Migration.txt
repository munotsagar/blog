JefferyWay

Laravel Migration
•	Create new table :
1.	Php artisan make:migration create_article_table --create="articles"
2.	Php artisan migrate(make changes)
3.	composer require doctrine/dbal
4.	php artisan make:migration add_excerpt_to_articles --table="articles"
5.	Php artisan migrat:rollback
6.  php artisan make:model Article
	composer depends nikic/php-parser
7.  php artisan tinker
8.  $articles = APP\Article::where('body', 'some text')->get();
9.  $article = new APP\Article;
	$article->title = "Article Title";
	$article->body = "Article Body";
	$article->save();
	
10. $article = APP\Article::create(['title' => 'New Article', 'body' => 'New Body', 'published_at' => Carbon\Carbon::now()]);	

11. $articles = APP\Article::find(2); 

12. $articles->toArray();

13 $articles->update(['title' => 'New updated title', 'body' => 'New updated Body']);

14 APP\Article::all()->toArray();

15 $articles = APP\Article::findOrFail(2); 

16 abort(404) to show error page

17 <a href="/articles/{{$article->id}}"> {{$article->title}}</a>

18 <a href="{{action('ArticlesController@show', [$article->id])}}"> {{$article->title}}</a>

19 <a href="{{url('/articles/', $article->id)}}"> {{$article->title}}</a>

20 composer require illuminate/html

	in view file need to add :
	
	{!! Form::open() !!}
	
	 <div class="form-group">
    {!! Form::label('title', 'Name:') !!}
    {!! Form::text('title', null, ['class' => 'form-control']) !!}
    </div>
    
	{!! Form::close() !!}
	
	E:\php\htdocs\blog\vendor\illuminate\html\HtmlServiceProvider.php
	
	in this file need to change :
	
	$this->app->bindShared('html', function($app) to $this->app->bindShared('html', function($app)
	
	and $this->app->bindShared('form', function($app) to $this->app->singleton('form', function($app)
	
	

21 dd('Sagar'); to show message

22 $article = new Article;
	
	$article->title = "New Title";
	
	$input = Request::all();
	
	$article->title = $input['title'];
	
	$article->save();
	
	OR
	
	Article::create($input);
	
23 Form Validation for Create Article Form

	php artisan make:request ArticleRequest
	
	public function rules()
    {
        return [
            'title' => 'required|min:3',
            'body'  =>  'required',
            'published_at'  =>  'required|date'
        ];
    }
	
24 add type hunting in controller class in method where actual data stored

		public function store(CreateArticleRequest $request){
		
		Article::create($request->all());
        return redirect('articles');
		}
		
24 In view add below code to show error message
	
		 @if ($errors->any())
        <ul class="alert alert-danger">
            @foreach($errors->all() as $error)
                <li>{{$error}}</li>
            @endforeach
        </ul>
    @endif
	
	
25 php artisan route:list (List of all the routes in application)

26 Route::resource('articles', 'ArticlesController'); 

	With this line laravel understand and create all the dependent route for article module automatically.
	add above line on route.php file and then fire below command also comment all other route for article
	
	$  php artisan route:list
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+
| Domain | Method    | URI                      | Name             | Action                                          | Middleware |
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+
|        | GET|HEAD  | /                        |                  | Closure                                         | web        |
|        | GET|HEAD  | about                    |                  | App\Http\Controllers\WelcomeController@about    | web        |
|        | POST      | articles                 | articles.store   | App\Http\Controllers\ArticlesController@store   | web        |
|        | GET|HEAD  | articles                 | articles.index   | App\Http\Controllers\ArticlesController@index   | web        |
|        | GET|HEAD  | articles/create          | articles.create  | App\Http\Controllers\ArticlesController@create  | web        |
|        | DELETE    | articles/{articles}      | articles.destroy | App\Http\Controllers\ArticlesController@destroy | web        |
|        | PUT|PATCH | articles/{articles}      | articles.update  | App\Http\Controllers\ArticlesController@update  | web        |
|        | GET|HEAD  | articles/{articles}      | articles.show    | App\Http\Controllers\ArticlesController@show    | web        |
|        | GET|HEAD  | articles/{articles}/edit | articles.edit    | App\Http\Controllers\ArticlesController@edit    | web        |
|        | GET|HEAD  | contact                  |                  | App\Http\Controllers\WelcomeController@contact  | web        |
|        | GET|HEAD  | foo                      |                  | Closure                                         | web        |
+--------+-----------+--------------------------+------------------+-------------------------------------------------+------------+

27 php artisan migrate --path=Illuminate\Database\Migrations

Note: If you receive a "class not found" error when running migrations, try running the  command : composer dump-autoload

php artisan cache:clear
composer clearcache
composer dumpautoload 

If you deleted the file you should delete the matching row from the migrations table in your DB. Don't delete a migration without doing migrate:reset first.

$user = new App\User;

>>> $user->username = 'sagar';

>>> $user->email = 'munot.sagar@gmail.com';


>>> $user->password = bcrypt('sagarmunot');
=> "←[32m$2y$10$cUaxQ7ApeSlYhdAlJR5ZA.YU8EE/eT2A07ZzIaEkhwtzxqwTjS5k2←[39m"
>>> $user->save();


$user->articles()->get()->toArray(); OR $user->articles()->toArray();

php artisan make:auth

-------------------------------------------------------------------------------------------------------------------
Create REST base API in Laravel

1	composer create-project restAPP --prefer-dist

php artisan make:middleware simpleAuthMiddleware



https://www.codetutorial.io/laravel-5-rest-api-basic-authentication/

https://www.codetutorial.io/laravel-and-angularjs-token-based-auth-part1/

https://laravel.com/docs/master/authentication#included-views

https://laracasts.com/series/incremental-api-development/episodes/1

Rest api example :

http://www.tutorials.kode-blog.com/laravel-5-angularjs-tutorial

------------------------------------- Remove packages from laravel -------------------------------

The steps to remove a package from Laravel are:
Remove declaration from composer.json (in "require" section)
Remove Service Provider from "app/config/app.php" (reference in "providers" array)
Remove any Class Aliases from "app/config/app.php"
Remove any references to the package from your code :-)
Run "composer update"

----------------------------------------------------------------------------------------------------

-------------------------------- XAPI ---------------------------------------------------------------

https://packagist.org/search/?tags=can

-----------------------------------------------------------------------------------------------------

Install https://nodejs.org/en/ nodejs from this link

to check node js install : node -v

command : npm install

npm rebuild node-sass

gulp


install scss :

	1 install ruby 
	
	2 go to ruby/bin location on command line C:\Ruby23\bin\
	
	3 run this command : gem install sass
	
	
28 composer require laracasts/flash

	php artisan make:model Tag
	
	php artisan make:migration create_tags_table --create=tages
	
	App\Tag::lists('name');
	
	
	In Article model file we can write this method :
	
		public function tags()
		{
			return $this->belongsToMany('App\Tag')->withTimestamps();
		}
		
		reboot php artisan tinker
		
		$article = App\Ariticle::first();
		
		$article->tags()->attach(1);
		
		
		DB::select('select * from article_tag');
		
		$article->tags->toArray();
		
		
29 Model Binding

	E:\php\htdocs\blog\app\Providers\RouteServiceProvider.php
	
	 public function boot(Router $router)
    {
        //

        parent::boot($router);

        $router->model('articles', 'App\Article'); // add this line to get article id without fething this from URL
    }
	
30 php artisan make:controller PagesController 	

31 Route::get('test', function(){
	echo "<form method = 'POST' action = 'test'>";
	echo "<input type = 'submit'>";
	echo "<input type = 'hidden' value = 'PUT' name = '_method'>";
	echo "</form>";
});

32 brew install wget    (this will help to fetch online files in to particuler folder)

command line :

wget https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js

Bootstrap Starer Template for Navigation Bar

http://getbootstrap.com/examples/starter-template/

33 composer require alexdover/blade-set

	use variable assignment in blade file like below :
	
	@set('week', 0);

		@foreach ($things as $thing)
		  @if ($week != $thing->week)
			WEEK {{ $thing->week }}
			@set('week', $thing->week)
		  @endif

		  Title: {{ $thing->title }}
		@endforeach
	
	@set('my_model_list', MyModel::where('something', '=', 1)->paginate(10))
	
34 Use counter in blade file 

	https://github.com/laravel/framework/issues/4778
	
	https://github.com/sineld/bladeset
	
	Installation

	Require this package in your composer.json.

	"sineld/bladeset": "5.2.*@dev"
	Update composer. This will download the package.

	composer update
	Add the BladeSetServiceProvider to the providers array in app/config/app.php.

	Sineld\BladeSet\BladeSetServiceProvider::class,
	(Optional) Publish package config.

	php artisan vendor:publish
	Then edit app/config/bladeset.php accoring to your needs.

	All done!

35 If we want to send data directly to View then create new provider file under :


	php artisan make:provider ViewComposerServiceProvider

	
	app/Providers/ViewComposerServiceProvider.php
	
	 public function composeNavigation()
    {
        view()->composer('partials.nav', function ($view){

            $view->with('latest', \App\Article::latest()->first());

        });

        //view()->composer('partials.nav', 'App\Http\Composers\NavigationComposer');
    }
	
	resources/views/partials/nav.blade.php
	
	<ul class="nav navbar-nav navbar-right">
		<li>{!! link_to_action('ArticlesController@show', $latest->title, [$latest->id])
		!!}}</li>{{--$latest value will be fetch from E:\php\htdocs\blog\app\Providers\AppServiceProvider.php
		 from boot method --}}
	</ul>
	
	
36 Create new instance of Laravel

		laravel new ParojectName
		
37 Change domain name  command :

	homestead edit
	
		> In Sites doplicate map and to values
		
38 After making changes in that file fire below command :

	homestead provision
	
	
39 Host Setup

		sudo vi /etc/hosts
		
		add entry Ip address with project url
		
		
40 To see git ignored files
			
	cat .gitignore